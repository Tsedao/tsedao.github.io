<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SadWet</title><link>https://tsedao.github.io/</link><description>Recent content on SadWet</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 27 Dec 2021 16:19:29 +0800</lastBuildDate><atom:link href="https://tsedao.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>About</title><link>https://tsedao.github.io/about/</link><pubDate>Tue, 28 Dec 2021 00:00:00 +0000</pubDate><guid>https://tsedao.github.io/about/</guid><description>Who I am? My name is Zitao Song (Pronunced by Tsedao-Soong).
I&amp;rsquo;m an MSc student studying in the Data Science Programme at The Chinese University of Hong Kong, Shenzhen.
I&amp;rsquo;m primarily interested in modifying and designing modern machine learning algorithms to solve real-life problems.
I like digging deep into the math behind the algorithms and trying to make connections between different algorithms.
Personally, I consider the EM-style algorithms the most elegant algorithms, since it generates a monotonic bounded sequence, which must converge (Bolzano-Weierstrass Theorem).</description></item><item><title>C++ Learning Note</title><link>https://tsedao.github.io/post/c++/</link><pubDate>Mon, 27 Dec 2021 16:19:29 +0800</pubDate><guid>https://tsedao.github.io/post/c++/</guid><description>Heap memory and Stack memory Different ways to initialize pointers
int * a = &amp;amp;num;Â create a pointer points to num on stack memory Cube * cube = new Cube; create a pointer points to cube on heap memory When deleting a pointer, we need to assign the pointer to nullptr even if the the memory will be released after the function is returned</description></item><item><title>Docker Tutorial</title><link>https://tsedao.github.io/post/docker/</link><pubDate>Sun, 26 Dec 2021 11:47:08 +0800</pubDate><guid>https://tsedao.github.io/post/docker/</guid><description>Docker Installation Install docker engine and Nvidia-docker on related platforms.
Problem of seeing CUDA11 on docker while the host CUDA version in 11.
One of the primary functions of nvidia-docker is to inject the all of NVIDIA driver libs from the host into the container so that the container will run properly with GPUs. One of these libraries is libcuda.so. This is one of the reasons you are seeing nvidia-smi report the driver version from your host.</description></item><item><title>Theory Of Statistics</title><link>https://tsedao.github.io/post/theoryofstat/</link><pubDate>Sun, 26 Dec 2021 10:55:34 +0800</pubDate><guid>https://tsedao.github.io/post/theoryofstat/</guid><description>THIS IS A SIMPLIFIED LECTURE REVIEW BASED ON CUHKSZ&amp;rsquo;S THEORY OF STATISTICS (Statistical Inference George Casella)
Common Family of Distributions Exponential Family $f(x|\theta)=h(x)c(\theta)\exp(\sum_{i}^{k}w_{i}(\theta)t_{i}(x))$
Binomial Distribution Poisson Distribution Exponential Distribution Full exponential family (dimension k = number of parameters d) versus curved exponential family (dimension k &amp;gt; number of parameters d)
Why do we need exponential family?
Simplify calculating exception and variance of different moments based on $t_{i}(x)$' We can use k statistics instead of a large number of original samples to make an inference about the parameter $\theta$ equivalently, without losing any information.</description></item><item><title/><link>https://tsedao.github.io/search/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://tsedao.github.io/search/</guid><description>Search Go &amp;nbsp;</description></item></channel></rss>